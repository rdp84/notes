
lvs - display information about logical volumes
pvs - display information about physical volumes
vgs - display information about volume groups
fdisk -l - displays information on partition table entries

df -h - gets file system disk space usage

umount -v /home - unmounts home with verbose output

e2fsck -ff /dev/fedora/home - forces filesyetem check (this might be /dev/mapper/fedora-home) 

resize2fs /dev/fedora/home xG - reduce size of filesystem to x Gigabytes (again could possibly be /dev/mapper...)

lvreduce -L -xG /dev/fedora/home - reduce size of logical volume to x Gigabytes

resize2fs /dev/fedora/home - re-size filesyetm back

mount /dev/fedora/home /home - mount filesystem back

lvdisplay fedora to check volume

on shrinking volumes, the physical volume ends up being fragmented. You can check the status of the physical extents:

pvs -v --segments /dev/device

from the output of this you can then start to move segments that make up a logical volume into the free space with the following:

pvmove --alloc anywhere /dev/sda5:yyyy-end - this will move the volume into the best fit free space.
pvmove --alloc anywhere /dev/sda5:yyyy-end newStart-newEnd - this will move the volume to newStart, ending at newEnd.
Need to ensure that the size of the extents (newEnd - newStart) is greater than the size of the volume (end-yyyy) in this case.

Now that the volume has been defragmented (all the free extents are at the end of the volume) can now shrink it down:

pvresize --setphysicalvolumesize 80G /dev/sda2

To shrink the size of the partition that the volume sits on and make the newly created free space available to be used by
us parted

parted - starts a command interface
p - print current state of partitions
resizepart - resize a partition, i.e., shrink it to desired size
mkpart - make a partition

once you have made a partition then need to make the filesystem on that partition with the command:
mkfs.* - diferent appendix on command depending on what filesystem wish to create. Use tab completion to see a load.

fdisk /dev/sdb - manipulate partition table of disk /dev/sdb. When pluggin in USB thumb drive run dmesg to see where it is loaded

fdisk starts an interface. Run 'm' to see a full list of commands. Some useful ones:

F - list free space on unpartitioned space left on device
d - delete a partition
n - create a new partition
t - change the type of partition (this doesn't format the partition with the filesystem, just flags as to what filesystem will be installed on it)
  - use 'L' to see a full liting of available types
a - toggle whether the partion is a boot partition
w - write out changes and exit. This is important to save changes made since fdisk doesn't make them immediately.

Once partitions have been setup need to format it. Use mkfs... commands to do this:

mkfs.fat -F 32 /dev/sdb1 (/dev/sdb1 is the partition)
sudo mkfs.ext4 /dev/sdb2

Can also possibly use parted to do similar things. Unsure as to whether you can resize a partition with fdisk...
